{"version":3,"sources":["assets/airepanama.png","components/sections/ChartSection1.jsx","components/sections/AdminCardSection1.jsx","firebase/config.js","firebase/firebase.js","firebase/index.js","hooks/useAutenticacion.jsx","firebase/context.js","components/sections/topNavigation.jsx","components/sections/sideNavigation.jsx","components/Footer.jsx","components/sections/Layout.jsx","hooks/useFacturas.jsx","components/pages/DashboardPage.jsx","hooks/useEmpresa.jsx","components/pages/Perfil.jsx","hooks/useClientes.jsx","hooks/useValidacion.jsx","validacion/validarCrearCliente.jsx","context/ModalContext.jsx","components/sections/ModalCliente.jsx","components/pages/Clientes.jsx","hooks/useProductos.jsx","validacion/validarCrearProducto.jsx","components/sections/ModalProducto.jsx","components/pages/Productos.jsx","components/pages/Facturas.jsx","context/FacturasContext.jsx","components/facturas/VistaPrevia.jsx","components/facturas/InfoFactura.jsx","components/facturas/NuevaFactura.jsx","components/Routes.js","validacion/validarIniciarSesion.jsx","components/pages/Login.jsx","App.js","registerServiceWorker.js","index.js","assets/reactlogo.png"],"names":["module","exports","ChartSection1","className","md","data","labels","datasets","label","backgroundColor","borderWidth","height","options","responsive","maintainAspectRatio","scales","xAxes","barPercentage","gridLines","display","color","yAxes","ticks","beginAtZero","Component","AdminCardSection1","totalFacturaMesActual","totalFacturaMesAnterior","cantidadFacturas","xl","icon","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","app","apps","length","initializeApp","this","auth","db","firestore","storage","nombre","email","password","createUserWithEmailAndPassword","nuevoUsuario","user","updateProfile","displayName","signInWithEmailAndPassword","signOut","useAutenticacion","useState","usuarioAutenticado","guardarUsuarioAutenticado","useEffect","unsuscribe","onAuthStateChanged","usuario","FirebaseContext","createContext","FirebaseProvider","props","Provider","value","children","TopNavigation","collapse","setCollapse","useContext","light","expand","scrolling","href","onClick","isOpen","navbar","right","Swal","fire","title","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","cerrarSesion","alt","src","logo","exact","to","activeClassName","Footer","Layout","id","useFacturas","orden","facturaHook","guardarFacturaHook","manejarSnapshot","snapshot","docs","map","doc","collection","orderBy","onSnapshot","DashboardPage","fechaActual","Date","mesActual","getMonth","mesAnterior","a√±oActual","getFullYear","facturasMesActual","filter","factura","estatusFactura","fecha","filtered","Number","totalFactura","reduce","prev","next","toFixed","useEmpresa","empresa","guardarEmpresa","Perfil","sm","key","sub","vendedor","identificacion","size","telefono","correo","direccion","ruc","useClientes","clientes","guardarClientes","useValidacion","stateInicial","validar","fn","valores","guardarValores","errores","guardarErrores","submitForm","guardarSubmitForm","Object","keys","handleSubmit","e","preventDefault","erroresValidacion","setTimeout","handleChange","target","name","validarCrearCliente","ModalContext","ModalProvider","modal","guardarModal","toggleModal","ModalCliente","userSelect","STATE_INICIAL","tipo","a","cliente","update","showConfirmButton","timer","toggle","onSubmit","htmlFor","type","onChange","placeholder","disabled","Clientes","setUserSelect","columns","field","sort","rows","accion","text","delete","add","striped","bordered","small","useProductos","productos","guardarProductos","validarCrearProducto","marca","modelo","precio","precion","categoria","productSelect","producto","Productos","setProductSelect","ModalProducto","ListadoFacturas","nombreCliente","cotizacion","numeroFactura","total","descripcion","estatus","pill","FacturasContext","FacturasProvider","uid","guardarCliente","costo","cantidad","numFactura","prodState","setProdState","clienteID","estado","guardarFactura","detalles","guardarDetalles","previa","guardarPrevia","VistaPrevia","PrintProvider","Print","single","style","width","minHeight","marginLeft","marginRight","toLocaleDateString","detalle","borderRight","NoPrint","window","print","detallesFacturaFirebase","facturaFirebase","prod","costoProducto","idProducto","totalProducto","InfoFactura","handleProdChange","updatedProds","dataset","idx","state","sumaPrecios","gTotal","lg","required","val","qty","tot","data-idx","splice","NuevaFactura","Routes","path","component","Facturas","validarIniciarSesion","test","Login","error","guardarError","history","useHistory","login","push","console","message","s","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.226e8ec1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/airepanama.0ba5aa25.png\";","import React, { Component } from \"react\";\nimport { MDBCol, MDBCard, MDBCardBody, MDBRow, MDBView } from \"mdbreact\";\nimport { Bar, Pie } from \"react-chartjs-2\";\n\nclass ChartSection1 extends Component {\n  render() {\n    const dataBar = {\n      labels: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\",\n      ],\n      datasets: [\n        {\n          label: \"Facturas Total\",\n          data: [\n            1500,\n            1600,\n            2500,\n            3000,\n            1800,\n            1450,\n            2200,\n            1500,\n            1600,\n            2500,\n            3000,\n            1800,\n          ],\n          backgroundColor: \"rgba(98,  182, 239, 0.5)\",\n          borderWidth: 1,\n        },\n      ],\n    };\n\n    const barChartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        xAxes: [\n          {\n            barPercentage: 1,\n            gridLines: {\n              display: true,\n              color: \"rgba(0, 0, 0, 0.1)\",\n            },\n          },\n        ],\n        yAxes: [\n          {\n            gridLines: {\n              display: true,\n              color: \"rgba(0, 0, 0, 0.1)\",\n            },\n            ticks: {\n              beginAtZero: true,\n            },\n          },\n        ],\n      },\n    };\n\n    \n\n    return (\n      <MDBRow className=\"mb-4\">\n        <MDBCol md=\"12\" className=\"mb-4\">\n          <MDBCard className=\"mb-4\">\n            <MDBView className=\"gradient-card-header blue darken-2\">\n              <h4 className=\"h4-responsive text-white\">Facturacion Mensual</h4>\n            </MDBView>\n            <MDBCardBody>\n              <Bar data={dataBar} height={500} options={barChartOptions} />\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n        \n      </MDBRow>\n    );\n  }\n}\n\nexport default ChartSection1;\n","import React from \"react\";\nimport { MDBCard, MDBIcon, MDBRow, MDBCol } from \"mdbreact\";\n\nconst AdminCardSection1 = ({\n  totalFacturaMesActual,\n  totalFacturaMesAnterior,\n  cantidadFacturas\n}) => {\n  return (\n    <MDBRow className=\"mb-4\">\n      <MDBCol xl=\"4\" md=\"6\" className=\"mb-r\">\n        <MDBCard className=\"cascading-admin-card\">\n          <div className=\"admin-up\">\n            <MDBIcon icon=\"money-bill-alt\" className=\"primary-color\" />\n            <div className=\"data\">\n              <p>VENTAS DEL MES</p>\n              <h4>\n                <strong>${totalFacturaMesActual}</strong>\n              </h4>\n            </div>\n          </div>\n        </MDBCard>\n      </MDBCol>\n      <MDBCol xl=\"4\" md=\"6\" className=\"mb-r\">\n        <MDBCard className=\"cascading-admin-card\">\n          <div className=\"admin-up\">\n            <MDBIcon icon=\"chart-line\" className=\"primary-color\" />\n            <div className=\"data\">\n              <p>N¬∞ FACTURAS</p>\n              <h4>\n                <strong>{cantidadFacturas}</strong>\n              </h4>\n            </div>\n          </div>\n        </MDBCard>\n      </MDBCol>\n      <MDBCol xl=\"4\" md=\"6\" className=\"mb-r\">\n        <MDBCard className=\"cascading-admin-card\">\n          <div className=\"admin-up\">\n            <MDBIcon icon=\"chart-pie\" className=\"primary-color\" />\n            <div className=\"data\">\n              <p>MES PASADO</p>\n              <h4>\n                <strong>${totalFacturaMesAnterior}</strong>\n              </h4>\n            </div>\n          </div>\n        </MDBCard>\n      </MDBCol>\n    </MDBRow>\n  );\n};\n\nexport default AdminCardSection1;\n","const firebaseConfig = {\r\n  apiKey: \"AIzaSyDDDDM62HBMVTXhwKV3ayOqNIxRU7JvDGk\",\r\n    authDomain: \"admindash-c0115.firebaseapp.com\",\r\n    databaseURL: \"https://admindash-c0115.firebaseio.com\",\r\n    projectId: \"admindash-c0115\",\r\n    storageBucket: \"admindash-c0115.appspot.com\",\r\n    messagingSenderId: \"27520686193\",\r\n    appId: \"1:27520686193:web:8a392a560e51e52bae63d0\"\r\n  };\r\n\r\n  export default firebaseConfig;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nimport firebaseConfig from './config';\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        if(!app.apps.length) {\r\n            app.initializeApp(firebaseConfig)\r\n        }\r\n        this.auth = app.auth();\r\n        this.db = app.firestore();\r\n        this.storage = app.storage();\r\n    }\r\n\r\n    // Registra un usuario\r\n    async registrar(nombre, email, password) {\r\n        const nuevoUsuario = await this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n        return await nuevoUsuario.user.updateProfile({\r\n            displayName : nombre\r\n        })\r\n    }\r\n\r\n    // Inicia sesi√≥n del usuario\r\n    async login(email, password) {\r\n        return this.auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    // Cierra la sesi√≥n del usuario\r\n    async cerrarSesion() {\r\n        await this.auth.signOut();\r\n    }\r\n}\r\n\r\nconst firebase = new Firebase();\r\nexport default firebase;","import firebase from './firebase';\r\nimport FirebaseContext from '../firebase/context';\r\n\r\nexport {FirebaseContext}\r\n\r\nexport default firebase;","import React, { useState, useEffect } from 'react'\r\nimport firebase from '../firebase';\r\n\r\nfunction useAutenticacion() {\r\n    const [usuarioAutenticado, guardarUsuarioAutenticado] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const unsuscribe = firebase.auth.onAuthStateChanged(usuario => {\r\n            if(usuario) {\r\n                guardarUsuarioAutenticado(usuario);\r\n            } else {\r\n                guardarUsuarioAutenticado(null);\r\n            }\r\n        });\r\n\r\n        return () => unsuscribe()\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return usuarioAutenticado;\r\n}\r\n\r\nexport default useAutenticacion;","import React, { createContext } from 'react';\r\nimport firebase from \"./firebase\";\r\nimport useAutenticacion from \"../hooks/useAutenticacion\";\r\n\r\n\r\n\r\nexport const FirebaseContext = createContext(null);\r\n\r\n\r\nconst FirebaseProvider = (props) => {\r\n    const usuario = useAutenticacion();\r\n\r\n    return (\r\n        <FirebaseContext.Provider\r\n        value={{firebase, usuario}}>\r\n            {props.children}\r\n        </FirebaseContext.Provider>\r\n    )\r\n}\r\nexport default FirebaseProvider;","import React, { useState, useContext } from \"react\";\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBNavItem,\n} from \"mdbreact\";\nimport { FirebaseContext } from \"../../firebase/context\";\nimport Swal from \"sweetalert2\";\n\nconst TopNavigation = () => {\n  const [collapse, setCollapse] = useState(false);\n  const { firebase } = useContext(FirebaseContext);\n\n  const onClick = () => {\n    setCollapse(!collapse);\n  };\n\n  return (\n    <MDBNavbar className=\"flexible-navbar\" light expand=\"md\" scrolling>\n      <MDBNavbarBrand href=\"/\">\n        <strong>React Admin</strong>\n      </MDBNavbarBrand>\n      <MDBNavbarToggler onClick={onClick} />\n      <MDBCollapse isOpen={collapse} navbar>\n        <MDBNavbarNav right>\n          <MDBNavItem>\n            <a className=\"nav-link Ripple-parent\" href=\"/dashboard\">\n              Dashboard\n            </a>\n          </MDBNavItem>\n          <MDBNavItem>\n            <a className=\"nav-link Ripple-parent\" href=\"/perfil\">\n              Perfil\n            </a>\n          </MDBNavItem>\n          <MDBNavItem>\n            <a className=\"nav-link Ripple-parent\" href=\"/clientes\">\n              Clientes\n            </a>\n          </MDBNavItem>\n          <MDBNavItem>\n            <a className=\"nav-link Ripple-parent\" href=\"/productos\">\n              Productos\n            </a>\n          </MDBNavItem>\n          <MDBNavItem>\n            <a className=\"nav-link Ripple-parent\" href=\"/facturas\">\n              Cotizaciones\n            </a>\n          </MDBNavItem>\n          <MDBNavItem>\n            <a\n              href=\"#!\"\n              className=\"nav-link Ripple-parent red-text font-weight-bold\"\n              onClick={() =>\n                Swal.fire({\n                  title: \"Desea cerrar la sesion?\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Si, cerrar sesion!\",\n                }).then((result) => {\n                  if (result.value) {\n                    firebase.cerrarSesion();\n                  }\n                })\n              }\n            >\n              Cerrar Sesion\n            </a>\n          </MDBNavItem>\n        </MDBNavbarNav>\n      </MDBCollapse>\n    </MDBNavbar>\n  );\n};\n\nexport default TopNavigation;\n","import React from 'react';\nimport logo from \"../../assets/reactlogo.png\";\nimport { MDBListGroup, MDBListGroupItem, MDBIcon } from 'mdbreact';\nimport { NavLink } from 'react-router-dom';\n\nconst TopNavigation = () => {\n    return (\n        <div className=\"sidebar-fixed position-fixed\">\n            <a href=\"#!\" className=\"logo-wrapper waves-effect\">\n                <img alt=\"React Logo\" className=\"img-fluid\" src={logo}/>\n            </a>\n            <MDBListGroup className=\"list-group-flush\">\n                <NavLink exact={true} to=\"/\" activeClassName=\"activeClass\">\n                    <MDBListGroupItem>\n                        <MDBIcon icon=\"chart-pie\" className=\"mr-3\"/>\n                        Dashboard\n                    </MDBListGroupItem>\n                </NavLink>\n                <NavLink to=\"/perfil\" activeClassName=\"activeClass\">\n                    <MDBListGroupItem>\n                        <MDBIcon icon=\"user\" className=\"mr-3\"/>\n                        Perfil\n                    </MDBListGroupItem>\n                </NavLink>\n                <NavLink to=\"/clientes\" activeClassName=\"activeClass\">\n                    <MDBListGroupItem>\n                        <MDBIcon icon=\"address-book\" className=\"mr-3\"/>\n                        Clientes\n                    </MDBListGroupItem>\n                </NavLink>\n                <NavLink to=\"/productos\" activeClassName=\"activeClass\">\n                    <MDBListGroupItem>\n                        <MDBIcon icon=\"shopping-cart\" className=\"mr-3\"/>\n                        Productos\n                    </MDBListGroupItem>\n                </NavLink>\n                <NavLink to=\"/facturas\" activeClassName=\"activeClass\">\n                    <MDBListGroupItem>\n                        <MDBIcon icon=\"file-invoice-dollar\" className=\"mr-3\"/>\n                        Facturas\n                    </MDBListGroupItem>\n                </NavLink>\n            </MDBListGroup>\n        </div>\n    );\n}\n\nexport default TopNavigation;","import React from 'react';\nimport { MDBFooter} from 'mdbreact';\n\nconst Footer = () => {\n    return (\n        <MDBFooter color=\"blue\" className=\"text-center font-small darken-2\">\n            Trekant Studio\n        </MDBFooter>\n    );\n}\n\nexport default Footer;","import React from \"react\";\r\nimport TopNavigation from \"./topNavigation\";\r\nimport SideNavigation from \"./sideNavigation\";\r\nimport Footer from \"../Footer\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div className=\"flexible-content\">\r\n      <TopNavigation />\r\n      <SideNavigation />\r\n      <main id=\"content\" className=\"p-3 p-md-5\">\r\n        {children}\r\n      </main>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport { FirebaseContext } from \"../firebase/context\";\r\n\r\nconst useFacturas = orden => {\r\n\r\n    const [facturaHook, guardarFacturaHook] = useState([]);\r\n\r\n  const {firebase} = useContext(FirebaseContext);\r\n\r\n  useEffect(() =>  {\r\n    const obtenerFacturaHook = () => {\r\nfirebase.db.collection('facturas').orderBy(orden, 'desc').onSnapshot(manejarSnapshot)\r\n    }\r\n    obtenerFacturaHook();\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  function manejarSnapshot(snapshot) {\r\n    const facturaHook = snapshot.docs.map(doc => {\r\n      return {\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }\r\n    });\r\n    guardarFacturaHook(facturaHook);\r\n  }\r\n\r\n  return {facturaHook}\r\n}\r\n\r\nexport default useFacturas;","import React from \"react\";\nimport ChartSection1 from \"../sections/ChartSection1\";\nimport AdminCardSection1 from \"../sections/AdminCardSection1\";\nimport Layout from \"../sections/Layout\";\nimport useFacturas from \"../../hooks/useFacturas\";\n\nconst DashboardPage = () => {\n\n  //Hook con la informacion de Firebase\n  const { facturaHook } = useFacturas(\"numeroFactura\");\n  const fechaActual = new Date();\n  const mesActual = fechaActual.getMonth();\n  let mesAnterior = fechaActual.getMonth() - 1;\n  const a√±oActual = fechaActual.getFullYear();\n\n  if (mesAnterior < 0) {\n    mesAnterior = 11;\n  }\n\n  //Guardar los totales de las facturas aprobadas en el mes actual\n  const facturasMesActual = facturaHook\n    .filter(\n      (factura) =>\n        factura.estatusFactura === true &&\n        mesActual === new Date(factura.fecha).getMonth() &&\n        a√±oActual === new Date(factura.fecha).getFullYear()\n    )\n    .map((filtered) => Number(filtered.totalFactura));\n\n  //Suma de los totales de las facturas del mes actual\n  const totalFacturaMesActual = facturasMesActual\n    .reduce((prev, next) => prev + next, 0)\n    .toFixed(2);\n\n  //Guardar los totales de las facturas aprobadas del mes anterior\n  const facturasMesAnterior = facturaHook\n    .filter(\n      (factura) =>\n        factura.estatusFactura === true &&\n        mesAnterior === new Date(factura.fecha).getMonth() &&\n        a√±oActual === new Date(factura.fecha).getFullYear()\n    )\n    .map((filtered) => Number(filtered.totalFactura));\n\n  //Suma de los totales de las facturas del mes anterior\n  const totalFacturaMesAnterior = facturasMesAnterior\n    .reduce((prev, next) => prev + next, 0)\n    .toFixed(2);\n\n    const cantidadFacturas = facturasMesActual.length\n  return (\n    <Layout>\n      <AdminCardSection1\n      cantidadFacturas={cantidadFacturas}\n        totalFacturaMesActual={totalFacturaMesActual}\n        totalFacturaMesAnterior={totalFacturaMesAnterior}\n      />\n      <ChartSection1 />\n    </Layout>\n  );\n};\n\nexport default DashboardPage;\n","import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport { FirebaseContext } from \"../firebase/context\";\r\n\r\nconst useEmpresa = orden => {\r\n\r\n    const [empresa, guardarEmpresa] = useState([]);\r\n\r\n  const {firebase} = useContext(FirebaseContext);\r\n\r\n  useEffect(() =>  {\r\n    const obtenerEmpresa = () => {\r\nfirebase.db.collection('empresa').orderBy(orden, 'desc').onSnapshot(manejarSnapshot)\r\n    }\r\n    obtenerEmpresa();\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  function manejarSnapshot(snapshot) {\r\n    const empresa = snapshot.docs.map(doc => {\r\n      return {\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }\r\n    });\r\n    guardarEmpresa(empresa);\r\n  }\r\n\r\n  return {empresa}\r\n}\r\n\r\nexport default useEmpresa;","import React from \"react\";\n//MDB React\nimport {\n  MDBCard,\n  MDBCol,\n  MDBRow,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardText,\n} from \"mdbreact\";\n//Assests\nimport logo from \"../../assets/reactlogo.png\";\n//Hooks\nimport useEmpresa from \"../../hooks/useEmpresa\";\nimport Layout from \"../sections/Layout\";\n\nconst Perfil = () => {\n  //Hook con la informacion de firebase\n  const { empresa } = useEmpresa(\"nombre\");\n\n  return (\n    <Layout>\n      <MDBRow className=\"justify-content-center\">\n        <MDBCol sm=\"12\" md=\"6\" className=\"mb-3\">\n          <MDBCard>\n            <img className=\"img-fluid mx-auto d-block\" src={logo} alt=\"logo-empresa\"/>\n            <MDBCardBody>\n              {empresa.map((empresa) => (\n                <div key={empresa.id}>\n                  <MDBCardTitle className=\"text-center mb-4 font-bold blue-text\">\n                    {empresa.nombre}\n                  </MDBCardTitle>\n                  <MDBCardTitle sub className=\"mb-2 font-bold\">\n                    <MDBRow>\n                      <MDBCol>{empresa.vendedor}</MDBCol>\n                      <MDBCol>{empresa.identificacion}</MDBCol>\n                    </MDBRow>\n                  </MDBCardTitle>\n                  <MDBCardText>\n                    <MDBRow>\n                      <MDBCol size=\"12\">\n                        <strong className=\"mb-2\">Telefono: </strong>\n                        {empresa.telefono}\n                      </MDBCol>\n                      <MDBCol size=\"12\">\n                        <strong className=\"mb-2\">Correo: </strong>\n                        {empresa.correo}\n                      </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                      <MDBCol size=\"12\">\n                        <strong className=\"mb-2\">Direccion: </strong>\n                        {empresa.direccion}\n                      </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                      <MDBCol size=\"12\">\n                        <strong className=\"mb-2\">R.U.C: </strong>\n                        {empresa.ruc}\n                      </MDBCol>\n                    </MDBRow>\n                  </MDBCardText>\n                </div>\n              ))}\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n      </MDBRow>\n      </Layout>  );\n};\n\nexport default Perfil;\n","import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport { FirebaseContext } from \"../firebase/context\";\r\n\r\nconst useClientes = orden => {\r\n\r\n    const [clientes, guardarClientes] = useState([]);\r\n\r\n  const {firebase} = useContext(FirebaseContext);\r\n\r\n  useEffect(() =>  {\r\n    const obtenerClientes = () => {\r\nfirebase.db.collection('clientes').orderBy(orden, 'desc').onSnapshot(manejarSnapshot)\r\n    }\r\n    obtenerClientes();\r\n    // eslint-disable-next-line\r\n  }, [])\r\n \r\n  function manejarSnapshot(snapshot) {\r\n    \r\n    const clientes = snapshot.docs.map(doc => {\r\n      return {\r\n        \r\n        id: doc.id,\r\n        ...doc.data()\r\n      }\r\n      \r\n    });\r\n    guardarClientes(clientes);\r\n  }\r\n\r\n  return {clientes}\r\n}\r\n\r\nexport default useClientes;","import React, { useState, useEffect } from \"react\";\r\n\r\nconst useValidacion = (stateInicial, validar, fn) => {\r\n\r\n  const [valores, guardarValores] = useState(stateInicial);\r\n\r\n  //Errores va a ser un objeto\r\n  const [errores, guardarErrores] = useState({});\r\n  const [submitForm, guardarSubmitForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (submitForm) {\r\n      //Object.keys verifica si un objeto esta vacio o tiene algo\r\n      const noErrores = Object.keys(errores).length === 0;\r\n\r\n      if (noErrores) {\r\n        fn(); // fn = funcion que se ejecuta en el componente\r\n      }\r\n      guardarSubmitForm(false);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [errores]);\r\n\r\n  //Funcion que se ejecuta conforme el usuario escribe algo\r\n  const handleChange = (e) => {\r\n    guardarValores({\r\n      ...valores,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //funcion que se ejecuta cuando el usuario hace submit\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const erroresValidacion = validar(valores);\r\n    guardarErrores(erroresValidacion);\r\n    guardarSubmitForm(true);\r\n    setTimeout(() => {\r\n      guardarValores(stateInicial)\r\n    }, 800);\r\n  };\r\n\r\n  return {\r\n    valores,\r\n    errores,\r\n    submitForm,\r\n    handleSubmit,\r\n    handleChange, \r\n    guardarValores\r\n  };\r\n};\r\n\r\nexport default useValidacion;\r\n","export default function validarCrearCliente(valores) {\r\n  let errores = {};\r\n/*\r\n  // Validar el nombre del usuario\r\n  if(!valores.nombre) {\r\n    errores.nombre = \"El Nombre es obligatorio\";\r\n}\r\n\r\n// validar el email\r\n if( !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(valores.correo) ) {\r\n    errores.correo = \"Email no v√°lido\"\r\n}\r\n\r\n// Validar el telefono\r\nif(!valores.telefono) {\r\n  errores.telefono = \"El Telefono es obligatorio\";\r\n}else if (valores.telefono.length < 7) {\r\n  errores.telefono = \"El numero de telefono es invalido\"\r\n}\r\n\r\n// Validar el direccion \r\nif(!valores.direccion) {\r\n  errores.direccion = \"La direccion es obligatoria\";\r\n}else if (valores.direccion.length < 5) {\r\n  errores.direccion = \"Direccion invalida\"\r\n}\r\n\r\n// Validar el nombre del usuario\r\nif(!valores.tipo) {\r\n  errores.tipo = \"El tipo de persona es obligatorio\";\r\n}\r\n*/\r\n\r\n  return errores;\r\n}\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const ModalContext = createContext();\r\n\r\nconst ModalProvider = (props) => {\r\n  //state con la informacion del cliente en la factura\r\n  const [modal, guardarModal] = useState(false);\r\n  \r\n const toggleModal = () => {\r\n     guardarModal(!modal)\r\n }\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        modal,\r\n        guardarModal, \r\n        toggleModal\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ModalProvider;","import React, { useContext } from \"react\";\r\nimport {\r\n  MDBContainer,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBAlert,\r\n} from \"mdbreact\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { ModalContext } from \"../../context/ModalContext\";\r\n//Validaciones\r\nimport useValidacion from \"../../hooks/useValidacion\";\r\nimport validarCrearCliente from \"../../validacion/validarCrearCliente\";\r\nimport { useEffect } from \"react\";\r\nimport { FirebaseContext } from \"../../firebase/context\";\r\n\r\nconst ModalCliente = ({ userSelect }) => {\r\n  //useValidacion\r\n  const STATE_INICIAL = {\r\n    nombre: userSelect.nombre,\r\n    correo: userSelect.correo,\r\n    telefono: userSelect.telefono,\r\n    direccion: userSelect.direccion,\r\n    tipo: userSelect.tipo,\r\n    identificacion: userSelect.identificacion,\r\n  };\r\n \r\n  //context con las operaciones crud de firebase\r\n  const { firebase } = useContext(FirebaseContext);\r\n  const {\r\n    valores,\r\n    errores,\r\n    handleSubmit,\r\n    handleChange,\r\n    guardarValores,\r\n  } = useValidacion(STATE_INICIAL, validarCrearCliente, editarCliente);\r\n\r\n  useEffect(() => {\r\n    guardarValores(STATE_INICIAL);\r\n    // eslint-disable-next-line\r\n  }, [userSelect]);\r\n\r\n  //Destructuring del state\r\n  const { nombre, correo, telefono, direccion, tipo, identificacion } = valores;\r\n//Modal\r\nconst { modal, toggleModal } = useContext(ModalContext);\r\n  async function editarCliente() {\r\n    //Crear el objeto del nuevo producto\r\n    const cliente = {\r\n      nombre,\r\n      correo,\r\n      telefono,\r\n      direccion,\r\n      tipo,\r\n      identificacion,\r\n    };\r\n\r\n    //insertarlo en la base de datos\r\n    firebase.db.collection(\"clientes\").doc(userSelect.id).update(cliente);\r\n\r\n    Swal.fire({\r\n      icon: \"success\",\r\n      title: \"Se ha editado correctamente\",\r\n      showConfirmButton: false,\r\n      timer: 1500, \r\n    });\r\n\r\n    toggleModal();\r\n  }\r\n  \r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBModal isOpen={modal} toggle={toggleModal}>\r\n        <MDBModalHeader\r\n          toggle={toggleModal}\r\n          className=\"blue darken-2 white-text\"\r\n        >\r\n          Editar Cliente\r\n        </MDBModalHeader>\r\n        <MDBModalBody>\r\n          <div>\r\n            <form onSubmit={handleSubmit}>\r\n              <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                  <label htmlFor=\"editNombre\" className=\"grey-text\">\r\n                    Nombre\r\n                  </label>\r\n                  {errores.nombre && (\r\n                    <MDBAlert color=\"danger\"> {errores.nombre} </MDBAlert>\r\n                  )}\r\n                  <input\r\n                    name=\"nombre\"\r\n                    type=\"text\"\r\n                    id=\"editNombre\"\r\n                    onChange={handleChange}\r\n                    className=\"form-control text-capitalize\"\r\n                    value={nombre}\r\n                  />\r\n                </MDBCol>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                  <label htmlFor=\"editEmail\" className=\"grey-text\">\r\n                    Correo\r\n                  </label>\r\n                  {errores.correo && (\r\n                    <MDBAlert color=\"danger\"> {errores.correo} </MDBAlert>\r\n                  )}\r\n                  <input\r\n                    id=\"editEmail\"\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Ingrese correo\"\r\n                    onChange={handleChange}\r\n                    value={correo}\r\n                    name=\"correo\"\r\n                  />\r\n                </MDBCol>\r\n              </MDBRow>\r\n              <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                  <label htmlFor=\"editPhone\" className=\"grey-text\">\r\n                    Telefono\r\n                  </label>\r\n                  {errores.telefono && (\r\n                    <MDBAlert color=\"danger\"> {errores.telefono} </MDBAlert>\r\n                  )}\r\n                  <input\r\n                    id=\"editPhone\"\r\n                    type=\"tel\"\r\n                    className=\"form-control text-capitalize\"\r\n                    placeholder=\"Numero de telefono\"\r\n                    onChange={handleChange}\r\n                    value={telefono}\r\n                    name=\"telefono\"\r\n                  />\r\n                </MDBCol>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                  <label htmlFor=\"editIdentificacion\" className=\"grey-text\">\r\n                    Identificacion (opcional)\r\n                  </label>\r\n                  {errores.identificacion && (\r\n                    <MDBAlert color=\"danger\">{errores.identificacion}</MDBAlert>\r\n                  )}\r\n                  <input\r\n                    id=\"editIdentificacion\"\r\n                    type=\"text\"\r\n                    className=\"form-control text-capitalize\"\r\n                    placeholder=\"Identificacion\"\r\n                    onChange={handleChange}\r\n                    value={identificacion}\r\n                    name=\"identificacion\"\r\n                  />\r\n                </MDBCol>\r\n              </MDBRow>\r\n              <MDBRow>\r\n                <MDBCol md=\"4\" className=\"mb-3\">\r\n                  <label className=\"grey-text\">Natural o Empresa</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"tipo\"\r\n                    value={tipo}\r\n                    disabled\r\n                  />\r\n                </MDBCol>\r\n                <MDBCol md=\"8\" className=\"mb-3\">\r\n                  <label htmlFor=\"editAddress\" className=\"grey-text\">\r\n                    Direccion\r\n                  </label>\r\n                  {errores.direccion && (\r\n                    <MDBAlert color=\"danger\"> {errores.direccion} </MDBAlert>\r\n                  )}\r\n                  <input\r\n                    id=\"editAddress\"\r\n                    type=\"text\"\r\n                    className=\"form-control text-capitalize\"\r\n                    placeholder=\"Ingrese direccion\"\r\n                    onChange={handleChange}\r\n                    value={direccion}\r\n                    name=\"direccion\"\r\n                  />\r\n                </MDBCol>\r\n              </MDBRow>\r\n\r\n              <MDBModalFooter>\r\n                <MDBBtn color=\"danger\" onClick={toggleModal}>\r\n                  Cancelar\r\n                </MDBBtn>\r\n                <MDBBtn color=\"blue darken-2\" type=\"submit\">\r\n                Editar Cliente\r\n              </MDBBtn>              \r\n              </MDBModalFooter>\r\n            </form>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default ModalCliente;\r\n","import React, { useContext } from \"react\";\n//MDB React\nimport {\n  MDBRow,\n  MDBCol,\n  MDBView,\n  MDBCard,\n  MDBCardBody,\n  MDBBtn,\n  MDBAlert,\n  MDBDataTable,\n  MDBIcon,\n} from \"mdbreact\";\n//Sweet Alert\nimport Swal from 'sweetalert2'\n//Hooks\nimport useClientes from \"../../hooks/useClientes\";\n//Firebase\nimport { FirebaseContext } from \"../../firebase/context\";\n//Validaciones\nimport useValidacion from \"../../hooks/useValidacion\";\nimport validarCrearCliente from \"../../validacion/validarCrearCliente\";\nimport { useState } from \"react\";\nimport ModalCliente from \"../sections/ModalCliente\";\n//Context para apertura y cierre del modal\nimport {ModalContext} from \"../../context/ModalContext\";\nimport Layout from \"../sections/Layout\";\n//useValidacion\nconst STATE_INICIAL = {\n  nombre: \"\",\n  correo: \"\",\n  telefono: \"\",\n  direccion: \"\",\n  tipo: \"\",\n  identificacion: \"\",\n};\n\nconst Clientes = () => {\n  const { valores, errores, handleSubmit, handleChange } = useValidacion(\n    STATE_INICIAL,\n    validarCrearCliente,\n    crearCliente\n  );\n\n  //State con el cliente seleccionado para editar\n  const [userSelect, setUserSelect] = useState({\n    nombre: \"\",\n    correo: \"\",\n    telefono: \"\",\n    direccion: \"\",\n    tipo: \"\",\n    identificacion: \"\",\n    id: \"\"\n  });\n  //Destructuring del state\n  const { nombre, correo, telefono, direccion, tipo, identificacion } = valores;\n\n  //context con las operaciones crud de firebase\n  const { firebase } = useContext(FirebaseContext);\n\n  //Modal\n  const { modal, guardarModal } = useContext(ModalContext);\n\n  //Hook con la informacion de Firebase\n  const { clientes } = useClientes(\"nombre\");\n\n  //Datos de la tabla\n  const data = {\n    columns: [\n      {\n        label: \"Nombre\",\n        field: \"nombre\",\n        sort: \"asc\",\n      },\n      {\n        label: \"Correo\",\n        field: \"correo\",\n        sort: \"asc\",\n      },\n      {\n        label: \"Telefono\",\n        field: \"telefono\",\n        sort: \"asc\",\n      },\n      {\n        label: \"Direccion\",\n        field: \"direccion\",\n        sort: \"asc\",\n      },\n      {\n        label: \"Tipo\",\n        field: \"tipo\",\n        sort: \"asc\",\n      },\n      {\n        label: \"Identificacion\",\n        field: \"identificacion\",\n        sort: \"asc\",\n      },\n      {\n        label: \"Accion\",\n        field: \"accion\",\n      },\n    ],\n    rows: clientes.map((cliente) => ({\n      nombre: cliente.nombre,\n      correo: cliente.correo,\n      telefono: cliente.telefono,\n      direccion: cliente.direccion,\n      tipo: cliente.tipo,\n      identificacion: cliente.identificacion,\n      accion: (\n        <div className=\"d-flex justify-content-around\">\n          {\n            <a href=\"#!\"\n              onClick={() => {\n                guardarModal(!modal)\n                setUserSelect({\n                  nombre: cliente.nombre,\n                  correo: cliente.correo,\n                  telefono: cliente.telefono,\n                  direccion: cliente.direccion,\n                  tipo: cliente.tipo,\n                  identificacion: cliente.identificacion,\n                  id: cliente.id\n                });\n              }}\n            >\n              \n              <MDBIcon icon=\"edit\" size=\"lg\" className=\"blue-text\" />\n            </a>\n          }\n          <a href=\"#!\"\n            onClick={() => {\n              Swal.fire({\n                title: 'Desea eliminar el cliente?',\n                text: \"Esta accion no puede ser revertida!\",\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Si, eliminar cliente!'\n              }).then((result) => {\n                if (result.value) {\n                  Swal.fire(\n                    \n                    'Eliminado!',\n                    'El cliente ha sido eliminado.',\n                    firebase.db.collection(\"clientes\").doc(cliente.id).delete(),\n                    'success'\n                  )\n                }\n              })\n            }}\n          >\n            <MDBIcon icon=\"times\" size=\"lg\" className=\"red-text\" />\n          </a>\n        </div>\n      ),\n    })),\n  };\n\n  async function crearCliente() {\n    //Crear el objeto del nuevo producto\n    const cliente = {\n      nombre,\n      correo,\n      telefono,\n      direccion,\n      tipo,\n      identificacion,\n    };\n\n\n    //insertarlo en la base de datos\n    firebase.db.collection(\"clientes\").add(cliente);\n\n    //Alerta de Confirmacion\n    Swal.fire({\n      icon: 'success',\n      title: 'Se ha agregado correctamente',\n      showConfirmButton: false,\n      timer: 1500\n    })\n\n  }\n\n  \n  return (\n    <Layout>\n    <MDBRow>\n      <MDBCol md=\"12\">\n        <MDBCard className=\"mt-1\">\n          <MDBView className=\"gradient-card-header blue darken-2\">\n            <h4 className=\"h4-responsive text-white\">Listado de Clientes</h4>\n          </MDBView>\n          <MDBCardBody>\n            <MDBDataTable\n              striped\n              bordered\n              small\n              data={data}\n              responsive\n            />\n          </MDBCardBody>\n        </MDBCard>\n      </MDBCol>\n\n      <MDBCol md=\"12\">\n        <MDBCard className=\"mt-3\">\n          <MDBView className=\"gradient-card-header blue darken-2\">\n            <h4 className=\"h4-responsive text-white\">Agregar Cliente</h4>\n          </MDBView>\n          <MDBCardBody>\n            <form onSubmit={handleSubmit}>\n              <MDBRow>\n                <div className=\"form-group col-md-4\">\n                  <label>Nombre</label>\n                  {errores.nombre && (\n                    <MDBAlert color=\"danger\"> {errores.nombre} </MDBAlert>\n                  )}\n                  <input\n                    type=\"text\"\n                    className=\"form-control text-capitalize\"\n                    placeholder=\"Ingrese nombre\"\n                    onChange={handleChange}\n                    value={nombre}\n                    name=\"nombre\"\n                  />\n                </div>\n                <div className=\"form-group col-md-4\">\n                  <label>Correo</label>\n                  {errores.correo && (\n                    <MDBAlert color=\"danger\"> {errores.correo} </MDBAlert>\n                  )}\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Ingrese correo\"\n                    onChange={handleChange}\n                    value={correo}\n                    name=\"correo\"\n                  />\n                </div>\n                <div className=\"form-group col-md-4\">\n                  <label>Telefono</label>\n                  {errores.telefono && (\n                    <MDBAlert color=\"danger\"> {errores.telefono} </MDBAlert>\n                  )}\n                  <input\n                    type=\"tel\"\n                    className=\"form-control text-capitalize\"\n                    placeholder=\"Numero de telefono\"\n                    onChange={handleChange}\n                    value={telefono}\n                    name=\"telefono\"\n                  />\n                </div>\n                <div className=\"form-group col-md-4\">\n                  <label>Direccion</label>\n                  {errores.direccion && (\n                    <MDBAlert color=\"danger\"> {errores.direccion} </MDBAlert>\n                  )}\n                  <input\n                    type=\"text\"\n                    className=\"form-control text-capitalize\"\n                    placeholder=\"Ingrese direccion\"\n                    onChange={handleChange}\n                    value={direccion}\n                    name=\"direccion\"\n                  />\n                </div>\n                <div className=\"form-group col-md-4\">\n                  <label>Tipo</label>\n                  {errores.tipo && (\n                    <MDBAlert color=\"danger\"> {errores.tipo} </MDBAlert>\n                  )}\n                  <select\n                    className=\"browser-default custom-select\"\n                    onChange={handleChange}\n                    name=\"tipo\"\n                    value={tipo}\n                  >\n                    <option>--Seleccionar--</option>\n                    <option value=\"Natural\">Natural</option>\n                    <option value=\"Juridica\">Juridica</option>\n                  </select>\n                </div>\n                <div className=\"form-group col-md-4\">\n                  <label>Identificacion (opcional)</label>\n                  {errores.identificacion && (\n                    <MDBAlert color=\"danger\">\n                      {errores.identificacion}\n                    </MDBAlert>\n                  )}\n                  <input\n                    type=\"text\"\n                    className=\"form-control text-capitalize\"\n                    placeholder=\"Identificacion\"\n                    onChange={handleChange}\n                    value={identificacion}\n                    name=\"identificacion\"\n                  />\n                </div>\n              </MDBRow>\n\n              <MDBBtn color=\"blue darken-2\" type=\"submit\">\n                Agregar Cliente\n              </MDBBtn>\n            </form>\n          </MDBCardBody>\n        </MDBCard>\n      </MDBCol>\n      <ModalCliente\n      userSelect={userSelect}\n      />\n    </MDBRow>\n    </Layout>\n  );\n};\n\nexport default Clientes;\n","import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport { FirebaseContext } from \"../firebase/context\";\r\n\r\nconst useProductos = orden => {\r\n\r\n    const [productos, guardarProductos] = useState([]);\r\n\r\n  const {firebase} = useContext(FirebaseContext);\r\n\r\n  useEffect(() =>  {\r\n    const obtenerProductos = () => {\r\nfirebase.db.collection('productos').orderBy(orden, 'desc').onSnapshot(manejarSnapshot)\r\n    }\r\n    obtenerProductos();\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  function manejarSnapshot(snapshot) {\r\n    const productos = snapshot.docs.map(doc => {\r\n      return {\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }\r\n    });\r\n    guardarProductos(productos);\r\n  }\r\n\r\n  return {productos}\r\n}\r\n\r\nexport default useProductos;","export default function validarCrearProducto(valores) {\r\n  let errores = {};\r\n\r\n  // Validar marca\r\n  if (!valores.marca) {\r\n    errores.marca = \"La marca es obligatoria\";\r\n  }\r\n\r\n  // validar modelo\r\n  if (!valores.modelo) {\r\n    errores.modelo = \"El modelo es obligatorio\";\r\n  }\r\n\r\n  //Validar Precio\r\n  if (!valores.precio) {\r\n    errores.precio = \"El precio es obligatorio\";\r\n  }\r\n\r\n  if (valores.precio < 0) {\r\n    errores.precion = \"El precio es invalido\";\r\n  }\r\n\r\n  //Validar Categoria\r\n  if (!valores.categoria) {\r\n    errores.categoria = \"La categoria es obligatoria\";\r\n  }\r\n  return errores;\r\n}\r\n","import React, { useContext } from \"react\";\r\n//MDB\r\nimport {\r\n  MDBContainer,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBAlert,\r\n} from \"mdbreact\";\r\n//Sweet Alert\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { ModalContext } from \"../../context/ModalContext\";\r\n//Validaciones\r\nimport useValidacion from \"../../hooks/useValidacion\";\r\nimport { useEffect } from \"react\";\r\nimport { FirebaseContext } from \"../../firebase/context\";\r\nimport validarCrearProducto from \"../../validacion/validarCrearProducto\";\r\n\r\nconst ModalCliente = ({ productSelect }) => {\r\n  //useValidacion\r\n  const STATE_INICIAL = {\r\n    marca: productSelect.marca,\r\n    modelo: productSelect.modelo,\r\n    precio: productSelect.precio,\r\n    categoria: productSelect.categoria,\r\n  };\r\n\r\n  //context con las operaciones crud de firebase\r\n  const { firebase } = useContext(FirebaseContext);\r\n  const {\r\n    valores,\r\n    errores,\r\n    handleSubmit,\r\n    handleChange,\r\n    guardarValores,\r\n  } = useValidacion(STATE_INICIAL, validarCrearProducto, editarProducto);\r\n\r\n  useEffect(() => {\r\n    guardarValores(STATE_INICIAL);\r\n    // eslint-disable-next-line\r\n  }, [productSelect]);\r\n\r\n  //Destructuring del state\r\n  const { marca, modelo, precio, categoria } = valores;\r\n  //Modal\r\n  const { modal, toggleModal } = useContext(ModalContext);\r\n  async function editarProducto() {\r\n    //Crear el objeto del nuevo producto\r\n    const producto = {\r\n      marca,\r\n      modelo,\r\n      precio,\r\n      categoria,\r\n    };\r\n\r\n    //insertarlo en la base de datos\r\n    firebase.db.collection(\"productos\").doc(productSelect.id).update(producto);\r\n\r\n    Swal.fire({\r\n      icon: \"success\",\r\n      title: \"Se ha editado correctamente\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n\r\n    toggleModal();\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBModal isOpen={modal} toggle={toggleModal}>\r\n        <MDBModalHeader\r\n          toggle={toggleModal}\r\n          className=\"blue darken-2 white-text\"\r\n        >\r\n          Editar Producto\r\n        </MDBModalHeader>\r\n        <MDBModalBody>\r\n          <div>\r\n            <form onSubmit={handleSubmit}>\r\n              <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                  <label htmlFor=\"editMarca\" className=\"grey-text\">\r\n                    Marca\r\n                  </label>\r\n                  {errores.marca && (\r\n                    <MDBAlert color=\"danger\"> {errores.marca} </MDBAlert>\r\n                  )}\r\n                  <input\r\n                    name=\"marca\"\r\n                    type=\"text\"\r\n                    id=\"editMarca\"\r\n                    onChange={handleChange}\r\n                    className=\"form-control text-capitalize\"\r\n                    value={marca}\r\n                  />\r\n                </MDBCol>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                  <label htmlFor=\"editModelo\" className=\"grey-text\">\r\n                    Modelo\r\n                  </label>\r\n                  {errores.modelo && (\r\n                    <MDBAlert color=\"danger\"> {errores.modelo} </MDBAlert>\r\n                  )}\r\n                  <input\r\n                    id=\"editModelo\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                    value={modelo}\r\n                    name=\"modelo\"\r\n                  />\r\n                </MDBCol>\r\n              </MDBRow>\r\n              <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                  <label htmlFor=\"editPrecio\" className=\"grey-text\">\r\n                    Precio\r\n                  </label>\r\n                  {errores.precio && (\r\n                    <MDBAlert color=\"danger\"> {errores.precio} </MDBAlert>\r\n                  )}\r\n                  <input\r\n                    id=\"editPrecio\"\r\n                    type=\"number\"\r\n                    className=\"form-control text-capitalize\"\r\n                    onChange={handleChange}\r\n                    value={precio}\r\n                    name=\"precio\"\r\n                  />\r\n                </MDBCol>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                  <label className=\"grey-text\">Categoria</label>\r\n                  {errores.categoria && (\r\n                    <MDBAlert color=\"danger\">{errores.categoria}</MDBAlert>\r\n                  )}\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control text-capitalize\"\r\n                    onChange={handleChange}\r\n                    value={categoria}\r\n                    name=\"categoria\"\r\n                    disabled\r\n                  />\r\n                </MDBCol>\r\n              </MDBRow>\r\n              <MDBModalFooter>\r\n                <MDBBtn color=\"danger\" onClick={toggleModal}>\r\n                  Cancelar\r\n                </MDBBtn>\r\n                <MDBBtn color=\"blue darken-2\" type=\"submit\">\r\n                  Editar Producto\r\n                </MDBBtn>\r\n              </MDBModalFooter>\r\n            </form>\r\n          </div>\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default ModalCliente;\r\n","import React, { useContext } from \"react\";\n//MDB React\nimport {\n  MDBRow,\n  MDBCol,\n  MDBView,\n  MDBCard,\n  MDBCardBody,\n  MDBBtn,\n  MDBAlert,\n  MDBIcon,\n  MDBDataTable,\n} from \"mdbreact\";\n//Sweet Alert\nimport Swal from \"sweetalert2\";\n//Firebase\nimport { FirebaseContext } from \"../../firebase/context\";\n//Hooks\nimport useProductos from \"../../hooks/useProductos\";\n//Validaciones\nimport useValidacion from \"../../hooks/useValidacion\";\nimport validarCrearProducto from \"../../validacion/validarCrearProducto\";\n//Context para apertura y cierre del modal\nimport { ModalContext } from \"../../context/ModalContext\";\nimport { useState } from \"react\";\nimport ModalProducto from \"../sections/ModalProducto\";\nimport Layout from \"../sections/Layout\";\n\nconst STATE_INICIAL = {\n  marca: \"\",\n  modelo: \"\",\n  precio: 0,\n  categoria: \"\",\n};\n\nconst Productos = () => {\n  const { valores, errores, handleSubmit, handleChange } = useValidacion(\n    STATE_INICIAL,\n    validarCrearProducto,\n    crearProducto\n  );\n  //State con el cliente seleccionado para editar\n  const [productSelect, setProductSelect] = useState({\n    marca: \"\",\n    modelo: \"\",\n    precio: \"\",\n    categoria: \"\",\n    id: \"\",\n  });\n  //Modal\n  const { modal, guardarModal } = useContext(ModalContext);\n\n  //Destructuting del state\n  const { marca, modelo, precio, categoria } = valores;\n\n  //context con las operaciones crud de firebase\n  const { firebase } = useContext(FirebaseContext);\n\n  //Hook con la informacion de firebase\n  const { productos } = useProductos(\"marca\");\n\n  //Datos de la tabla\n  const data = {\n    columns: [\n      {\n        label: \"Marca\",\n        field: \"marca\",\n        sort: \"asc\",\n      },\n      {\n        label: \"Modelo\",\n        field: \"modelo\",\n        sort: \"asc\",\n      },\n      {\n        label: \"Precio\",\n        field: \"precio\",\n        sort: \"asc\",\n      },\n      {\n        label: \"Categoria\",\n        field: \"categoria\",\n        sort: \"asc\",\n      },\n      {\n        label: \"Accion\",\n        field: \"accion\",\n      },\n    ],\n    rows: productos.map((producto) => ({\n      marca: producto.marca,\n      modelo: producto.modelo,\n      precio: producto.precio,\n      categoria: producto.categoria,\n      accion: (\n        <div className=\"d-flex justify-content-around\">\n          {\n            <a href=\"#!\"\n              onClick={() => {\n                guardarModal(!modal);\n                setProductSelect({\n                  marca: producto.marca,\n                  modelo: producto.modelo,\n                  precio: producto.precio,\n                  categoria: producto.categoria,\n                  id: producto.id,\n                });\n              }}\n            >\n              <MDBIcon icon=\"edit\" size=\"lg\" className=\"blue-text\" />\n            </a>\n          }\n          <a href=\"#!\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Desea eliminar el producto?\",\n                text: \"Esta accion no puede ser revertida!\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Si, eliminar producto!\",\n              }).then((result) => {\n                if (result.value) {\n                  Swal.fire(\n                    \"Eliminado!\",\n                    \"El producto ha sido eliminado.\",\n                    firebase.db\n                      .collection(\"productos\")\n                      .doc(producto.id)\n                      .delete(),\n                    \"success\"\n                  );\n                }\n              });\n            }}\n          >\n            <MDBIcon icon=\"times\" size=\"lg\" className=\"red-text\" />\n          </a>\n        </div>\n      ),\n    })),\n  };\n\n  async function crearProducto() {\n    //Crear el objeto del nuevo producto\n    const producto = {\n      marca,\n      modelo,\n      precio,\n      categoria,\n    };\n\n    //insertarlo en la base de datos\n    firebase.db.collection(\"productos\").add(producto);\n\n    //Alerta de Confirmacion\n    Swal.fire({\n      icon: \"success\",\n      title: \"Se ha agregado correctamente\",\n      showConfirmButton: false,\n      timer: 1500,\n    });\n  }\n\n  return (\n    <Layout>\n      <MDBRow>\n        <MDBCol md=\"12\">\n          <MDBCard className=\"mt-1\">\n            <MDBView className=\"gradient-card-header blue darken-2\">\n              <h4 className=\"h4-responsive text-white\">Listado de Productos</h4>\n            </MDBView>\n            <MDBCardBody>\n              <MDBDataTable\n                striped\n                bordered\n                small\n                data={data}\n                responsive\n              />\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n\n        <MDBCol md=\"12\">\n          <MDBCard className=\"mt-3\">\n            <MDBView className=\"gradient-card-header blue darken-2\">\n              <h4 className=\"h4-responsive text-white\">Agregar Producto</h4>\n            </MDBView>\n            <MDBCardBody>\n              <form onSubmit={handleSubmit}>\n                <MDBRow>\n                  <div className=\"form-group col-md-3\">\n                    <label>Marca</label>\n                    {errores.marca && (\n                      <MDBAlert color=\"danger\"> {errores.marca} </MDBAlert>\n                    )}\n                    <input\n                      type=\"text\"\n                      className=\"form-control text-capitalize\"\n                      placeholder=\"Marca\"\n                      onChange={handleChange}\n                      value={marca}\n                      name=\"marca\"\n                    />\n                  </div>\n                  <div className=\"form-group col-md-4\">\n                    <label>Modelo</label>\n                    {errores.modelo && (\n                      <MDBAlert color=\"danger\"> {errores.modelo} </MDBAlert>\n                    )}\n                    <input\n                      type=\"text\"\n                      className=\"form-control text-capitalize\"\n                      placeholder=\"Modelo\"\n                      onChange={handleChange}\n                      value={modelo}\n                      name=\"modelo\"\n                    />\n                  </div>\n                  <div className=\"form-group col-md-2\">\n                    <label>Precio</label>\n                    {errores.precio && (\n                      <MDBAlert color=\"danger\"> {errores.precio} </MDBAlert>\n                    )}\n                    <input\n                      type=\"number\"\n                      className=\"form-control text-capitalize\"\n                      placeholder=\"Precio $\"\n                      onChange={handleChange}\n                      value={precio}\n                      name=\"precio\"\n                    />\n                  </div>\n                  <div className=\"form-group col-md-3\">\n                    <label>Categoria</label>\n                    {errores.categoria && (\n                      <MDBAlert color=\"danger\"> {errores.categoria} </MDBAlert>\n                    )}\n                    <select\n                      className=\"browser-default custom-select\"\n                      onChange={handleChange}\n                      name=\"categoria\"\n                      value={categoria}\n                    >\n                      <option>--Seleccionar--</option>\n                      <option value=\"Refrigeracion\">Refrigeracion</option>\n                      <option value=\"Seguridad\">Seguridad</option>\n                      <option value=\"Persianas\">Persianas</option>\n                    </select>\n                  </div>\n                </MDBRow>\n\n                <MDBBtn color=\"blue darken-2\" type=\"submit\">\n                  Agregar Producto\n                </MDBBtn>\n              </form>\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n        <ModalProducto productSelect={productSelect} />\n      </MDBRow>\n    </Layout>\n  );\n};\n\nexport default Productos;\n","import React, { useContext } from \"react\";\r\nimport {\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBView,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBBtn,\r\n  MDBDataTable,\r\n  MDBIcon,\r\n  MDBLink,\r\n  MDBBadge,\r\n} from \"mdbreact\";\r\n//Hooks\r\nimport useFacturas from \"../../hooks/useFacturas\";\r\nimport Swal from \"sweetalert2\";\r\nimport { FirebaseContext } from \"../../firebase/context\";\r\nimport Layout from \"../sections/Layout\";\r\n\r\nconst ListadoFacturas = () => {\r\n  //context con las operaciones crud de firebase\r\n  const { firebase } = useContext(FirebaseContext);\r\n\r\n  //Hook con la informacion de Firebase\r\n  const { facturaHook } = useFacturas(\"numeroFactura\");\r\n  //Datos de la tabla\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"Cliente\",\r\n        field: \"nombre\",\r\n        sort: \"asc\",\r\n      },\r\n      {\r\n        label: \"Fecha\",\r\n        field: \"fecha\",\r\n        sort: \"asc\",\r\n      },\r\n      {\r\n        label: \"COT #\",\r\n        field: \"cotizacion\",\r\n        sort: \"asc\",\r\n      },\r\n      {\r\n        label: \"Total\",\r\n        field: \"total\",\r\n        sort: \"asc\",\r\n      },\r\n      {\r\n        label: \"Descripcion\",\r\n        field: \"descripcion\",\r\n        sort: \"asc\",\r\n      },\r\n      {\r\n        label: \"Estatus\",\r\n        field: \"estatus\",\r\n        sort: \"asc\",\r\n      },\r\n    ],\r\n    rows: facturaHook.map((factura) => ({\r\n      nombre: factura.nombreCliente,\r\n      fecha: factura.fecha,\r\n      cotizacion: \"00\" + factura.numeroFactura,\r\n      total: factura.totalFactura + \" $\",\r\n      descripcion: factura.descripcion,\r\n      estatus: factura.estatusFactura ? (\r\n        \r\n        <><MDBBadge pill color=\"success\">\r\n        Aprobada\r\n      </MDBBadge><a\r\n        href=\"#!\"\r\n        onClick={() => {\r\n          firebase.db.collection(\"facturas\").doc(factura.id).delete()\r\n        }}\r\n      >\r\n        <MDBIcon icon=\"trash-alt\" size=\"lg\" className=\"red-text\" />\r\n      </a></>\r\n      ) : (\r\n        <>\r\n          <MDBBadge pill color=\"warning\" className=\"mr-2\">\r\n            Pendiente\r\n          </MDBBadge>\r\n          <a\r\n            href=\"#!\"\r\n            onClick={() => {\r\n              Swal.fire({\r\n                title: \"Desea aprobar la cotizacion\",\r\n                text: \"Esta accion no puede ser revertida!\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Si, aprobar!\",\r\n              }).then((result) => {\r\n                if (result.value) {\r\n                  Swal.fire({\r\n                    icon: \"success\",\r\n                    title: \"La cotizacion ha sido aprobada!\",\r\n                    showConfirmButton: false,\r\n                    timer: 1500,\r\n                  });\r\n                  firebase.db\r\n                    .collection(\"facturas\")\r\n                    .doc(factura.id)\r\n                    .update(\"estatusFactura\", true);\r\n                }\r\n              });\r\n            }}\r\n          >\r\n            <MDBIcon icon=\"check\" size=\"lg\" className=\"green-text\" />\r\n          </a>\r\n          \r\n        </>\r\n      ),\r\n    })),\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <MDBRow>\r\n        <MDBCol md=\"12\">\r\n          <MDBCard className=\"mt-1\">\r\n            <MDBView className=\"gradient-card-header blue darken-2\">\r\n              <h4 className=\"h4-responsive text-white\">\r\n                Listado de Cotizaciones\r\n              </h4>\r\n            </MDBView>\r\n            <MDBCardBody>\r\n              <MDBDataTable\r\n                striped\r\n                bordered\r\n                small\r\n                data={data}\r\n                className=\"text-center\"\r\n                responsive\r\n              />\r\n            </MDBCardBody>\r\n            <MDBCol md=\"4\" className=\"pb-2\">\r\n              <MDBLink to=\"/nueva-factura\">\r\n                <MDBBtn color=\"blue darken-2\">Nueva Cotizacion</MDBBtn>\r\n              </MDBLink>\r\n            </MDBCol>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ListadoFacturas;\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const FacturasContext = createContext();\r\n\r\nconst FacturasProvider = (props) => {\r\n  //state con la informacion del cliente en la factura\r\n  const [cliente, guardarCliente] = useState({\r\n    uid: \"\",\r\n    id: \"\",\r\n    nombre: \"\",\r\n    correo: \"\",\r\n    direccion: \"\",\r\n    telefono: \"\",\r\n    identificacion: \"\",\r\n  });\r\n  //state de producto vacio en la factura\r\n  const [producto] = useState({\r\n    costo: 0,\r\n    id: \"\",\r\n    cantidad: 1,\r\n    total: 0,\r\n    numFactura: \"\"\r\n  });\r\n  //state con los detalles de los productos\r\n  const [prodState, setProdState] = useState([{ ...producto }]);\r\n  //state factura\r\n  const [factura, guardarFactura] = useState({\r\n    clienteID: \"\",\r\n    totalFactura: \"\",\r\n    numeroFactura: \"\",\r\n    fecha: \"\",\r\n    nombreCliente: \"\", \r\n    descripcion: \"\",\r\n    estado: \"\",\r\n  });\r\n  //state con los detalles de la factura\r\n  const [detalles, guardarDetalles] = useState();\r\n  //state vista previa\r\n  const [previa, guardarPrevia] = useState(false);\r\n  return (\r\n    <FacturasContext.Provider\r\n      value={{\r\n        cliente,\r\n        producto,\r\n        prodState,\r\n        factura,\r\n        detalles,\r\n        previa,\r\n        guardarPrevia,\r\n        guardarFactura,\r\n        guardarDetalles,\r\n        guardarCliente,\r\n        setProdState,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FacturasContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FacturasProvider;\r\n","import React, { useContext } from \"react\";\r\nimport useProductos from \"../../hooks/useProductos\";\r\nimport useClientes from \"../../hooks/useClientes\";\r\nimport logo from \"../../assets/airepanama.png\";\r\nimport { FirebaseContext } from \"../../firebase/context\";\r\nimport { FacturasContext } from \"../../context/FacturasContext\";\r\nimport PrintProvider, { Print, NoPrint } from \"react-easy-print\";\r\n\r\nconst VistaPrevia = () => {\r\n  //context con las operaciones crud de firebase\r\n  const { firebase } = useContext(FirebaseContext);\r\n  //Hook con la informacion de Firebase\r\n  const { productos } = useProductos(\"marca\");\r\n  const { clientes } = useClientes(\"nombre\");\r\n\r\n  //context con la informacion de la factura\r\n  const { factura, detalles, guardarPrevia, prodState } = useContext(\r\n    FacturasContext\r\n  );\r\n\r\n  const {\r\n    clienteID,\r\n    fecha,\r\n    numeroFactura,\r\n    totalFactura,\r\n    nombreCliente,\r\n    descripcion,\r\n    estatusFactura,\r\n  } = factura;\r\n\r\n  const print = () => {\r\n    window.print();\r\n    //Objeto con la informacion de la factura\r\n    const facturaFirebase = {\r\n      clienteID,\r\n      fecha,\r\n      numeroFactura,\r\n      totalFactura,\r\n      nombreCliente,\r\n      descripcion,\r\n      estatusFactura,\r\n    };\r\n\r\n    //insertarlo en la base de datos\r\n    firebase.db.collection(\"facturas\").add(facturaFirebase);\r\n\r\n    let detallesFacturaFirebase;\r\n    prodState.map(\r\n      (prod) => (\r\n        (detallesFacturaFirebase = {\r\n          costoProducto: prod.costo,\r\n          idProducto: prod.id,\r\n          totalProducto: prod.total,\r\n          numFactura: prod.numFactura,\r\n        }),\r\n        //insertarlo en la base de datos\r\n        firebase.db.collection(\"detalles_factura\").add(detallesFacturaFirebase)\r\n      )\r\n    );\r\n\r\n    //Recargar el componente luego de generar la cotizacion\r\n  };\r\n  \r\n  return (\r\n    <PrintProvider>\r\n      <div className=\"poppin p-5 m-5\">\r\n        <Print single name=\"Invoice\">\r\n          <div\r\n            id=\"divToPrint\"\r\n            style={{\r\n              backgroundColor: \"white\",\r\n              width: \"210mm\",\r\n              minHeight: \"297mm\",\r\n              marginLeft: \"0mm\",\r\n              marginRight: \"0mm\",\r\n            }}\r\n          >\r\n            <div className=\"container\">\r\n              <div className=\"row d-flex justify-content-between pb-1 pt-2 align-items-center\">\r\n                <div className=\"col-4\">\r\n                  <img src={logo} className=\"img-fluid\" alt=\"Logo AirePanama\" />\r\n                </div>\r\n                <div className=\"col-4\">\r\n                  <h4 className=\"mb-0\">COTIZACION</h4>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"row d-flex justify-content-between py-2\">\r\n                <div className=\"col-4\">\r\n                  <strong>Fecha: </strong> {new Date().toLocaleDateString()}\r\n                </div>\r\n                <div className=\"col-4\">\r\n                  <strong>COT: </strong>00{factura.numeroFactura}\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"row d-flex justify-content-between mb-4\">\r\n                {clientes\r\n                  .filter((cliente) => cliente.id === factura.clienteID)\r\n                  .map((filtered) => (\r\n                    <div className=\"col-5\" key={filtered.id}>\r\n                      <h5>{filtered.nombre}</h5>\r\n\r\n                      <div>Correo: {filtered.correo}</div>\r\n                      <div>Telefono: {filtered.telefono}</div>\r\n                      <div>Direccion: {filtered.direccion}</div>\r\n                      <div>Identificacion: {filtered.identificacion}</div>\r\n                    </div>\r\n                  ))}\r\n                <div className=\"col-5\">\r\n                  <h5>Aire Panama</h5>\r\n                  <div>Correo: infoairepanama@gmail.com</div>\r\n                  <div>Telefono: 68774067</div>\r\n                  <div>Direccion: San Francisco</div>\r\n                  <div>R.U.C: 13-NT-2-713759 DV 79</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header px-2 py-0\">\r\n                      <table className=\"table table-sm mb-0\">\r\n                        <thead>\r\n                          <tr>\r\n                            <td style={{ width: \"55%\" }} className=\"border-0\">\r\n                              <strong>Producto</strong>\r\n                            </td>\r\n                            <td\r\n                              style={{ width: \"15%\" }}\r\n                              className=\"text-center border-0\"\r\n                            >\r\n                              <strong>Cantidad</strong>\r\n                            </td>\r\n                            <td\r\n                              style={{ width: \"15%\" }}\r\n                              className=\"text-center border-0\"\r\n                            >\r\n                              <strong>Precio</strong>\r\n                            </td>\r\n                            <td\r\n                              style={{ width: \"15%\" }}\r\n                              className=\"text-center border-0\"\r\n                            >\r\n                              <strong>Total</strong>\r\n                            </td>\r\n                          </tr>\r\n                        </thead>\r\n                      </table>\r\n                    </div>\r\n                    <div className=\"card-body px-2\">\r\n                      <table className=\"table table-sm\">\r\n                        <tbody>\r\n                          {detalles.map((detalle) =>\r\n                            productos\r\n                              .filter((producto) => producto.id === detalle.id)\r\n                              .map((filtered) => (\r\n                                <tr key={filtered.id}>\r\n                                  <td style={{ width: \"55%\" }}>\r\n                                    {filtered.marca} {filtered.modelo}\r\n                                  </td>\r\n                                  <td\r\n                                    style={{ width: \"15%\" }}\r\n                                    className=\"text-center \"\r\n                                  >\r\n                                    {detalle.cantidad}\r\n                                  </td>\r\n                                  <td\r\n                                    style={{ width: \"15%\" }}\r\n                                    className=\"text-center \"\r\n                                  >\r\n                                    {detalle.costo} $\r\n                                  </td>\r\n                                  <td\r\n                                    style={{ width: \"15%\" }}\r\n                                    className=\"text-center \"\r\n                                  >\r\n                                    {detalle.total} $\r\n                                  </td>\r\n                                </tr>\r\n                              ))\r\n                          )}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row d-flex justify-content-end mt-3\">\r\n                <div className=\"col-4\">\r\n                  <div className=\"card\">\r\n                    <table className=\"table table-sm m-0\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <th\r\n                            className=\"card-header\"\r\n                            style={{\r\n                              width: \"50%\",\r\n                              borderRight: \"1px solid rgba(0,0,0,0.125)\",\r\n                            }}\r\n                          >\r\n                            <strong>Total</strong>\r\n                          </th>\r\n                          <td className=\"text-center\">\r\n                            {factura.totalFactura} $\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <NoPrint>\r\n              <div className=\"row mb-3 d-flex justify-content-center\">\r\n                <div className=\"col-3\">\r\n                  <button className=\"btn btn-primary\" onClick={print}>\r\n                    Imprimir\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => guardarPrevia(false)}\r\n                  >\r\n                    Volver\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </NoPrint>\r\n          </div>\r\n        </Print>\r\n      </div>\r\n    </PrintProvider>\r\n  );\r\n};\r\n\r\nexport default VistaPrevia;\r\n","import React, { useContext } from \"react\";\r\n//Hooks\r\nimport useProductos from \"../../hooks/useProductos\";\r\nimport useEmpresa from \"../../hooks/useEmpresa\";\r\nimport useClientes from \"../../hooks/useClientes\";\r\nimport useFacturas from \"../../hooks/useFacturas\";\r\n//Context de Facturas\r\nimport { FacturasContext } from \"../../context/FacturasContext\";\r\n//MDB\r\nimport {\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBBtn,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,\r\n  MDBCard,\r\n  MDBView,\r\n  MDBCardBody,\r\n  MDBIcon,\r\n} from \"mdbreact\";\r\n\r\nconst InfoFactura = () => {\r\n  //state de context facturas\r\n  const {\r\n    prodState,\r\n    setProdState,\r\n    producto,\r\n    cliente,\r\n    factura,\r\n    guardarCliente,\r\n    guardarFactura,\r\n    guardarDetalles,\r\n    guardarPrevia,\r\n  } = useContext(FacturasContext);\r\n\r\n  //Hook con la informacion de Firebase\r\n  const { productos } = useProductos(\"marca\");\r\n  const { clientes } = useClientes(\"nombre\");\r\n  const { empresa } = useEmpresa(\"nombre\");\r\n  const { facturaHook } = useFacturas(\"numeroFactura\");\r\n\r\n  //Destructuring del state\r\n  const {\r\n    nombre,\r\n    id,\r\n    direccion,\r\n    correo,\r\n    identificacion,\r\n    telefono,\r\n    uid,\r\n  } = cliente;\r\n\r\n  //Contador de facturas\r\n  const numeroFactura = facturaHook.length + 1;\r\n\r\n  //Registra cambio en el id al seleccionar un cliente\r\n  const handleChange = (e) => {\r\n    guardarCliente({\r\n      ...cliente,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    guardarFactura({...factura,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  };\r\n\r\n  //agregar producto\r\n  const addProd = () => {\r\n    setProdState([...prodState, { ...producto }]);\r\n  };\r\n\r\n  //Registra los cambios en el producto\r\n  const handleProdChange = (e) => {\r\n    const updatedProds = [...prodState];\r\n    updatedProds[e.target.dataset.idx][e.target.className] = e.target.value;\r\n    setProdState(updatedProds);\r\n  };\r\n\r\n  //guardar el costo unitario y total en el state\r\n  prodState.map((state) =>\r\n    productos\r\n      .filter((producto) => producto.id === state.id)\r\n      .map(\r\n        (filtered) => (\r\n          (state.costo = filtered.precio),\r\n          (state.total = (state.cantidad * state.costo).toFixed(2)),\r\n          (state.numFactura = numeroFactura)\r\n        )\r\n      )\r\n  );\r\n\r\n  //Eliminar ultimo item de los productos\r\n  const handlePostRemove = () => {\r\n    setProdState(prodState.splice(0, prodState.length - 1));\r\n  };\r\n\r\n  //almacena los totales de todos los productos\r\n  const grandTotal = prodState.map((gTotal) => Number(gTotal.total));\r\n\r\n  //suma cada uno de los totales de los productos\r\n  const sumaPrecios = grandTotal\r\n    .reduce((prev, next) => prev + next, 0)\r\n    .toFixed(2);\r\n\r\n  //Almacena la informacion del cliente en el state\r\n  clientes\r\n    .filter((cliente) => cliente.id === id)\r\n    .map((filtered) =>\r\n      guardarCliente({\r\n        uid: filtered.id,\r\n        nombre: filtered.nombre,\r\n        correo: filtered.correo,\r\n        direccion: filtered.direccion,\r\n        telefono: filtered.telefono,\r\n        identificacion: filtered.identificacion,\r\n      })\r\n    );\r\n\r\n  //Fecha\r\n  const fecha = new Date().toLocaleDateString(\"en-US\");\r\n\r\n  //Al enviar el Form\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    guardarFactura({\r\n      nombreCliente: nombre,\r\n      clienteID: uid,\r\n      totalFactura: sumaPrecios,\r\n      numeroFactura: numeroFactura,\r\n      fecha: fecha,\r\n      estatusFactura: false,\r\n      descripcion: factura.descripcion\r\n    });\r\n    guardarDetalles(prodState);\r\n    guardarPrevia(true);\r\n  };\r\n\r\n  return (\r\n    <MDBRow className=\"d-flex justify-content-center\">\r\n      <MDBCol md=\"10\" className=\"mb-3\">\r\n        <MDBCard>\r\n          <MDBView className=\"gradient-card-header blue darken-2\">\r\n            <MDBRow>\r\n              <MDBCol md=\"6\">\r\n                <h5 className=\"text-white\">\r\n                  <strong>Cotizacion: #-00{numeroFactura}</strong>\r\n                </h5>\r\n              </MDBCol>\r\n              <MDBCol md=\"6\">\r\n                <h5 className=\"text-white\">\r\n                  <strong>Fecha: {fecha}</strong>\r\n                </h5>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBView>\r\n          <MDBCardBody>\r\n            <form className=\"white\" onSubmit={handleSubmit}>\r\n              <MDBRow className=\"mb-3\">\r\n                <MDBCol md=\"6\">\r\n                  <div className=\"white p-3\">\r\n                    <MDBRow>\r\n                      <MDBCol md=\"12\" lg=\"4\">\r\n                        <h5 className=\"mb-3\">\r\n                          <strong>Cliente:</strong>\r\n                        </h5>\r\n                      </MDBCol>\r\n                      <MDBCol md=\"12\" lg=\"8\">\r\n                        <select\r\n                          className=\"browser-default custom-select\"\r\n                          name=\"id\"\r\n                          value={id}\r\n                          onChange={handleChange}\r\n                          required\r\n                        >\r\n                          <option value=\"\">Seleccione Cliente</option>\r\n                          {clientes.map((cliente) => (\r\n                            <option key={cliente.id} value={cliente.id}>\r\n                              {cliente.nombre}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                    <div>\r\n                      <strong>\r\n                        {nombre} {identificacion}\r\n                      </strong>\r\n                    </div>\r\n                    <div>Direccion: {direccion}</div>\r\n                    <div>Correo: {correo}</div>\r\n                    <div>Telefono: {telefono}</div>\r\n                  </div>\r\n                </MDBCol>\r\n                <MDBCol md=\"6\">\r\n                  {empresa.map((empresa) => (\r\n                    <div className=\"white p-3\" key={empresa.id}>\r\n                      <h5 className=\"mb-3\">\r\n                        <strong>De:</strong>\r\n                      </h5>\r\n                      <div>\r\n                        <strong>\r\n                          {empresa.nombre} {empresa.identificacion}\r\n                        </strong>\r\n                      </div>\r\n                      <div>Direccion: {empresa.direccion}</div>\r\n                      <div>Correo: {empresa.correo}</div>\r\n                      <div>Telefono: {empresa.telefono}</div>\r\n                    </div>\r\n                  ))}\r\n                </MDBCol>\r\n              </MDBRow>\r\n              <MDBTable responsive small>\r\n                <MDBTableHead>\r\n                  <tr >\r\n                    <th >#</th>\r\n                    <th >Producto</th>\r\n                    <th >Precio</th>\r\n                    <th >Cantidad</th>\r\n                    <th >Total</th>\r\n                  </tr>\r\n                </MDBTableHead>\r\n                <MDBTableBody>\r\n                  {prodState.map((val, idx) => {\r\n                    const prod = `prod-${idx}`;\r\n                    const precio = `precio-${idx}`;\r\n                    const qty = `qty-${idx}`;\r\n                    const tot = `tot-${idx}`;\r\n                    return (\r\n                      <tr key={`producto-${idx}`} >\r\n                        <td >{idx + 1}</td>\r\n                        <td >\r\n                          <select\r\n                            className=\"id\"\r\n                            name={prod}\r\n                            data-idx={idx}\r\n                            id={prod}\r\n                            value={prodState[idx].id}\r\n                            onChange={handleProdChange}\r\n                            required\r\n                          >\r\n                            <option value=\"\">--Seleccionar Producto--</option>\r\n                            {productos.map((producto) => (\r\n                              <option key={producto.id} value={producto.id}>\r\n                                {producto.marca} {producto.modelo}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </td>\r\n                        <td >\r\n                          <input\r\n                            disabled\r\n                            type=\"number\"\r\n                            name={precio}\r\n                            data-idx={idx}\r\n                            id={precio}\r\n                            className=\"costo\"\r\n                            value={prodState[idx].costo}\r\n                            onChange={handleProdChange}\r\n                          />\r\n                        </td>\r\n                        <td >\r\n                          <input\r\n                            type=\"number\"\r\n                            name={qty}\r\n                            data-idx={idx}\r\n                            id={qty}\r\n                            className=\"cantidad\"\r\n                            value={prodState[idx].cantidad}\r\n                            onChange={handleProdChange}\r\n                          />\r\n                        </td>\r\n                        <td >\r\n                          <input\r\n                            disabled\r\n                            type=\"number\"\r\n                            name={tot}\r\n                            data-idx={idx}\r\n                            id={tot}\r\n                            className=\"total\"\r\n                            value={prodState[idx].total}\r\n                            onChange={handleProdChange}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </MDBTableBody>\r\n              </MDBTable>\r\n              <MDBRow className=\"d-flex justify-content-between\">\r\n                <MDBCol sm=\"6\">\r\n                  <MDBBtn onClick={addProd} color=\"green\" size=\"sm\">\r\n                    <MDBIcon icon=\"plus\" />\r\n                  </MDBBtn>\r\n                  <MDBBtn onClick={handlePostRemove} color=\"red\" size=\"sm\">\r\n                    <MDBIcon icon=\"times\" />\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n                <MDBCol sm=\"6\" className=\"mt-3\">\r\n                  <label className=\"mr-2\">Total</label>\r\n                  <input disabled type=\"number\" value={sumaPrecios} />\r\n                </MDBCol>\r\n              </MDBRow>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <div className=\"form-group pt-4\">\r\n                    <label htmlFor=\"areaDescripcion\">\r\n                      Descripcion de la cotizacion\r\n                    </label>\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      id=\"areaDescripcion\"\r\n                      rows=\"3\"\r\n                      name=\"descripcion\"\r\n                      value={factura.descripcion}\r\n                      onChange={handleChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </MDBCol>\r\n              </MDBRow>\r\n              <MDBRow className=\"d-flex justify-content-end mt-5\">\r\n                <MDBCol sm=\"4\">\r\n                  <MDBBtn type=\"submit\" color=\"blue\">\r\n                    Vista Previa\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBRow>\r\n  );\r\n};\r\n\r\nexport default InfoFactura;\r\n","import React, { useContext } from \"react\";\r\nimport { FacturasContext } from \"../../context/FacturasContext\";\r\nimport VistaPrevia from \"./VistaPrevia\";\r\nimport Layout from \"../sections/Layout\";\r\nimport InfoFactura from \"./InfoFactura\";\r\n\r\nconst NuevaFactura = () => {\r\n  //state de context facturas\r\n  const { previa } = useContext(FacturasContext);\r\n\r\n  return (\r\n    <div>\r\n      {previa ? (\r\n        <VistaPrevia />\r\n      ) : (\r\n        <Layout>\r\n          <InfoFactura />\r\n        </Layout>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NuevaFactura;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport DashboardPage from \"./pages/DashboardPage\";\nimport Perfil from \"./pages/Perfil\";\nimport Clientes from \"./pages/Clientes\";\nimport Productos from \"./pages/Productos\";\nimport Facturas from \"./pages/Facturas\";\nimport NuevaFactura from \"./facturas/NuevaFactura\";\n\nconst Routes = () => {\n  return (\n    \n    <Switch>\n      <Route path=\"/\" exact component={DashboardPage} />\n      \n      <Route path=\"/perfil\" component={Perfil} />\n      <Route path=\"/clientes\" component={Clientes} />\n      <Route path=\"/productos\" component={Productos} />\n      <Route path=\"/facturas\" component={Facturas} />\n      <Route path=\"/nueva-factura\" component={NuevaFactura} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","export default function validarIniciarSesion(valores) {\r\n\r\n    let errores = {};\r\n\r\n    // validar el email\r\n    if(!valores.email) {\r\n        errores.email = \"El Email es obligatorio\";\r\n    } else if( !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(valores.email) ) {\r\n        errores.email = \"Email no v√°lido\"\r\n    }\r\n\r\n    // validar el password\r\n    if(!valores.password) {\r\n        errores.password = \"El password es obligatorio\";\r\n    } else if( valores.password.length < 6 ) {\r\n        errores.password = 'El password debe ser de al menos 6 caracteres'\r\n    }\r\n\r\n    return errores;\r\n}","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//MDB React\r\nimport {\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBBtn,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBCardText,\r\n  MDBAlert,\r\n} from \"mdbreact\";\r\n//Validaciones\r\nimport useValidacion from \"../../hooks/useValidacion\";\r\nimport validarIniciarSesion from \"../../validacion/validarIniciarSesion\";\r\n//Firebase\r\nimport firebase from \"../../firebase\";\r\n\r\nconst STATE_INICIAL = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst Login = () => {\r\n  const [error, guardarError] = useState(false);\r\n\r\n  const { valores, errores, handleSubmit, handleChange } = useValidacion(\r\n    STATE_INICIAL,\r\n    validarIniciarSesion,\r\n    iniciarSesion\r\n  );\r\n\r\n  const { email, password } = valores;\r\n\r\n  let history = useHistory();\r\n\r\n  async function iniciarSesion() {\r\n    try {\r\n      await firebase.login(email, password);\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.error(\"Hubo un error al autenticar el usuario\", error.message);\r\n      guardarError(error.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBRow\r\n        className=\"d-flex justify-content-center align-content-center\"\r\n        style={{ height: \"100vh\" }}\r\n      >\r\n        <MDBCol md=\"6\">\r\n          <MDBCard>\r\n            <MDBCardBody>\r\n              <MDBCardText>\r\n                <form onSubmit={handleSubmit}>\r\n                  <p className=\"h4 text-center mb-4\">Sign in</p>\r\n                  <label\r\n                    htmlFor=\"defaultFormLoginEmailEx\"\r\n                    s\r\n                    className=\"grey-text\"\r\n                  >\r\n                    Your email\r\n                  </label>\r\n                  {errores.email && (\r\n                    <MDBAlert color=\"danger\"> {errores.email} </MDBAlert>\r\n                  )}\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"defaultFormLoginEmailEx\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                    name=\"email\"\r\n                    value={email}\r\n                  />\r\n                  <br />\r\n                  <label\r\n                    htmlFor=\"defaultFormLoginPasswordEx\"\r\n                    className=\"grey-text\"\r\n                  >\r\n                    Your password\r\n                  </label>\r\n                  {errores.password && (\r\n                    <MDBAlert color=\"danger\"> {errores.password} </MDBAlert>\r\n                  )}\r\n                  {error && <MDBAlert color=\"danger\">{error}</MDBAlert>}\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"defaultFormLoginPasswordEx\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                    name=\"password\"\r\n                    value={password}\r\n                  />\r\n                  <div className=\"text-center mt-4\">\r\n                    <MDBBtn color=\"blue\" type=\"submit\">\r\n                      Login\r\n                    </MDBBtn>\r\n                  </div>\r\n                </form>\r\n              </MDBCardText>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\nimport Routes from \"../src/components/Routes\";\nimport \"./index.css\";\nimport FirebaseProvider from \"./firebase/context\";\nimport useAutenticacion from \"./hooks/useAutenticacion\";\nimport Login from \"./components/pages/Login\";\nimport FacturasProvider from \"./context/FacturasContext\";\nimport ModalProvider from \"./context/ModalContext\";\n\nconst App = () => {\n  const usuario = useAutenticacion();\n\n  return (\n    <FirebaseProvider>\n      <ModalProvider>\n        <FacturasProvider>\n          {usuario ? (\n            \n              <Routes />\n            \n          ) : (\n            <Login />\n          )}\n        </FacturasProvider>\n      </ModalProvider>\n    </FirebaseProvider>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/reactlogo.6228715c.png\";"],"sourceRoot":""}